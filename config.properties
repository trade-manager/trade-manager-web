# Note timezone is set on the commandline for that application. It should be set
# to the timezone of the mkt you are trading.
# i.e. -Duser.timezone=America/New_York for US markets
trade.tws.timezone=America/New_York

# The url and rest API key for polygon
trade.polygon.url=https://api.polygon.io/
trade.polygon.key=WGlljpSus0Ai1mj2ayaASNTcxchw9aUp

# The default market open/close time in 24HH:mm use 24 Hr clock.
trade.market.open=9:30
trade.market.close=16:00

# The risk amount per trade
trade.risk=100

# IB TWS Connection info
# Host default=localhost 
# Port default 7496
# Client Id default = 0
# trade.tws.host=dolphin
trade.tws.host=localhost
trade.tws.clientId=6
trade.tws.port=7496

# Default dir for csv gapper file use UNIX style
trade.csv.default.dir=../temp

# Default contract for right click add on Trading Tab.
# Format is DES, Underlying, Sec Type,Exchange, Expiration (yyyyMM, or yyyyMMdd opt),
# Strike Price(opt),PUT/CALL(opt),Multiplier(opt), Currency
# Examples for stock contracts
trade.tradingtab.default.add=DES,IBM,STK,SMART/ISLAND,,,,,USD
# trade.tradingtab.default.add=DES,SPY,STK,SMART/ISLAND,,,,,USD

# Examples for future contracts
# trade.tradingtab.default.add=DES,ES,FUT,GLOBEX,201406,,,50,USD
# Remember to change the currency to EUR
# trade.tradingtab.default.add=DES,DAX,FUT,DTB,201406,,,25,EUR
# trade.tradingtab.default.add=DES,YM,FUT,ECBOT,201406,,,5,USD

# Examples for currency contracts i.e. EUR.USD 
# Note for currencies change the prop
# trade.backfill.whatToShow to MIDPOINT
# trade.tradingtab.default.add=DES,EUR,CASH,IDEALPRO,,,,,USD

# Default dir for strategies this should contain strategy package structure 
# and be located of the application dir
trade.strategy.default.dir=../strategies

# The template class for new strategies. This should reside in the above dir.
trade.strategy.template=StrategyRuleTemplate

# None Tradingdays Sunday=7 Saturnday=6
# Trading days for week Stock Monday-Friday.
# E-mini Sunday-Saturday
trade.market.nontradingdays=6,7

# The default strategy to use when loading contracts from a csv file.
trade.strategy.default=5minBarGap

# The default tier to use when loading contracts from a csv file.
# values are: null(i.e No Gap), 1, 2, 3
trade.tier.default=

# This is the time span the request will cover measured in days. Standard is 2 days 
# Valid values are: 1, 2, 7, 15, 30, 60, 90, 180, 365 i.e in days only
# Note this is only used to set the default value when contracts are imported via a csv file.
trade.backfill.duration=2

# Specifies the size of the bars that will be returned (within IB/TWS limits).
# Valid values are: 30, 60, 120, 300 (5min), 900 (15min), 1800 (30min), 3600, 1 (1 day)
# Note DAY will use the seconds between the tradingday open/close.
# This is only used to set the default value when contracts are imported via a csv file.
trade.backfill.barsize=300

# 1=Regular trading hours  0=All trading hours
trade.backfill.useRTH=1

# A comma delimited list of generic tick types.  
# Tick types can be found in the Generic Tick Types page.
# See API Reference Guide.
trade.marketdata.genericTicklist=233

# Nature of the data extracted
# TRADES = All trades, BID, ASK, MIDPOINT (use for Currency)
trade.backfill.whatToShow=TRADES

# This will offset the tradingday date in the file. i.e default is zero.
# If you are doing historical data analysis you may want 
# to down load data after the day it was traded i.e. if the value
# is set to 3 data will be down loaded from tradingday +3 going back 
# as far as the trade.backfill.duration.
trade.backfill.offsetDays=0

# For back testing this is the bar size to use for the tradings day
# this value must be less than the selected tradestrategy bar size.
# So if tradestrategy bars size is 1hr and this is set to 5min on
# the tradngday the 1hour bars will build from the 5min bars and
# so the strategy would be fired every 5mins instead of just each hour.
# Default value is 0 meaning this feature is not used.
# Valid values are: 30, 60, 120, 300 (5min), 900 (15min), 1800 (30min), 3600, 1 (1 day)
# Note DAY will use the seconds between the tradingday open/close.
trade.backtest.barSize=300

# When market data is selected on the Configuration Tab this parm will
# force the close to be update as the last changes i.e the strategy
# will trigger everytime the last changes instead of being triggered
# only when the last falls outside the current forming bars H/L.
# values true and false
trade.marketdata.realtime.updateClose=false

# Log file and console logging values.
# Log Values are TRACE, DEBUG, INFO, WARN, ERROR
# The root logger with appender name
# Root Logger
property.filename=logs/trade123.log
appenders=console, file

rootLogger = DEBUG, STDOUT, LOGFILE
rootLogger.level=INFO
rootLogger.appenderRefs=STDOUT, LOGFILE
rootLogger.appenderRef.stdout.ref=STDOUT
rootLogger.appenderRef.file.ref=LOGFILE

# Direct log messages to STDOUT
appender.console.type=Console
appender.console.name=STDOUT
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

# Direct to a file
appender.file.type=File
appender.file.name=LOGFILE
appender.file.fileName=../${filename}
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

loggers=file
logger.file.name=LOGFILE
logger.file.level=debug
logger.file.appenderRefs=file
logger.file.appenderRef.file.ref=LOGFILE
# logger.file.additivity=false

logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR
logging.level.org.trade=INFO
logging.level.org.trade.strategy=WARN
